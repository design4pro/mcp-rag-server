[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-rag-server"
version = "0.1.0"
description = "MCP RAG Server with Qdrant, mem0, and Gemini API"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "RAG Team", email = "team@example.com"}
]
keywords = ["mcp", "rag", "qdrant", "mem0", "gemini", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp[cli]>=1.0.0",
    "qdrant-client>=1.7.0",
    "mem0ai>=0.1.0",
    "google-genai>=0.3.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "asyncio-mqtt>=0.16.0",
    "langchain>=0.1.0",
    "langchain-text-splitters>=0.0.1",
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "tiktoken>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
mcp-rag-server = "mcp_rag_server.server:main"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C4", "UP"]
ignore = ["E501", "B008"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"