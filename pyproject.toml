[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-rag-server"
version = "1.0.0"
description = "Production-ready MCP RAG Server with advanced AI reasoning, memory management, and comprehensive MCP integration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "DESIGN4PRO", email = "mcp-rag-server@design4.pro"}
]
keywords = ["mcp", "rag", "qdrant", "mem0", "gemini", "ai", "reasoning", "memory", "vector-search"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Database :: Database Engines/Servers",
]

dependencies = [
            "fastmcp>=2.10.6",
            "qdrant-client>=1.7.0",
        "google-genai>=0.3.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "asyncio-mqtt>=0.16.0",
    "langchain>=0.1.0",
    "langchain-text-splitters>=0.0.1",
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "tiktoken>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
mcp-rag-server = "mcp_rag_server.server:main"

[project.urls]
Homepage = "https://github.com/design4pro/mcp-rag-server"
Documentation = "https://github.com/design4pro/mcp-rag-server/docs"
Repository = "https://github.com/design4pro/mcp-rag-server.git"
Issues = "https://github.com/design4pro/mcp-rag-server/issues"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "I", "N", "W", "B", "C4", "UP"]
ignore = ["E501", "B008"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short"